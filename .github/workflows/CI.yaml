name: CI

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  TERRAFORM_VERSION: 1.1.6

jobs:
  validate-all:
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [ dev ]
    steps:
      - name: Checkout on ${{ github.ref_name }}
        uses: actions/checkout@v3

      - name: Install Ruby
        uses: ruby/setup-ruby@477b21f02be01bcb8030d50f37cfec92bfa615b6
        with:
          ruby-version: 3.0

      - name: Install Terraspace
        run: bundle update

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraspace validate all
        run: TS_ENV=${{ matrix.env }} terraspace all validate

  plan-all:
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    needs:
      - validate-all
    strategy:
      matrix:
        env: [dev]
    steps:
      - name: Checkout on ${{ github.ref_name }}
        uses: actions/checkout@v3

      - name: Install Ruby
        uses: ruby/setup-ruby@477b21f02be01bcb8030d50f37cfec92bfa615b6
        with:
          ruby-version: 3.0

      - name: Install Terraspace
        run: bundle update

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraspace plan all
        run: | 
          TS_ENV=${{ matrix.env }} terraspace all plan
          # shellcheck disable=SC2086
          for i in log/plan/*.log
            do
            echo "$i"
            (! grep "has not been deployed yet" ${i} >/dev/null && grep -A15 "Error: " ${i}) && KO=1 || KO=0
            echo ""
            echo ""
            [[ ${KO} -eq 1 ]] && ERR=1
            done
          [[ ${ERR} -eq 1 ]] && exit 1
          exit 0

  up-all:
    environment: ${{ matrix.env }}
    runs-on: ubuntu-latest
    needs:
      - validate-all
    strategy:
      matrix:
        env: [dev]
    steps:
      - name: Checkout on ${{ github.ref_name }}
        uses: actions/checkout@v3

      - name: Install Ruby
        uses: ruby/setup-ruby@477b21f02be01bcb8030d50f37cfec92bfa615b6
        with:
          ruby-version: 3.0

      - name: Install Terraspace
        run: bundle update

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraspace up all
        run: TS_ENV=${{ matrix.env }} terraspace all up -y